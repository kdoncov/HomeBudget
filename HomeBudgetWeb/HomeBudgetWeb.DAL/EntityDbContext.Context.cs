//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HomeBudgetWeb.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HomeBudgetWebEntities : DbContext
    {
        public HomeBudgetWebEntities()
            : base("name=HomeBudgetWebEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Korisnik> Korisniks { get; set; }
        public virtual DbSet<Logovanje> Logovanjes { get; set; }
        public virtual DbSet<PodvrstaTransfera> PodvrstaTransferas { get; set; }
        public virtual DbSet<Transfer> Transfers { get; set; }
        public virtual DbSet<VrstaTransfera> VrstaTransferas { get; set; }
    
        public virtual ObjectResult<sp_Login_getByidKorisnik_Result> sp_Login_getByidKorisnik(string korisnickoIme, string lozinka)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_getByidKorisnik_Result>("sp_Login_getByidKorisnik", korisnickoImeParameter, lozinkaParameter);
        }
    
        public virtual ObjectResult<sp_PodvrstaTransfera_getByIDVrsta_Result> sp_PodvrstaTransfera_getByIDVrsta(Nullable<int> iDVrstaTransfera)
        {
            var iDVrstaTransferaParameter = iDVrstaTransfera.HasValue ?
                new ObjectParameter("IDVrstaTransfera", iDVrstaTransfera) :
                new ObjectParameter("IDVrstaTransfera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PodvrstaTransfera_getByIDVrsta_Result>("sp_PodvrstaTransfera_getByIDVrsta", iDVrstaTransferaParameter);
        }
    
        public virtual int sp_PodvrstaTransfera_Insert(Nullable<int> iDVrstaTransfera, string opis)
        {
            var iDVrstaTransferaParameter = iDVrstaTransfera.HasValue ?
                new ObjectParameter("IDVrstaTransfera", iDVrstaTransfera) :
                new ObjectParameter("IDVrstaTransfera", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PodvrstaTransfera_Insert", iDVrstaTransferaParameter, opisParameter);
        }
    
        public virtual int sp_PodvrstaTransfera_Remove(Nullable<int> iDPodvrstaTransfera)
        {
            var iDPodvrstaTransferaParameter = iDPodvrstaTransfera.HasValue ?
                new ObjectParameter("IDPodvrstaTransfera", iDPodvrstaTransfera) :
                new ObjectParameter("IDPodvrstaTransfera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PodvrstaTransfera_Remove", iDPodvrstaTransferaParameter);
        }
    
        public virtual int sp_PodvrstaTransfera_Update(Nullable<int> iDPodvrstaTransfera, Nullable<int> iDVrstaTransfera, string opis)
        {
            var iDPodvrstaTransferaParameter = iDPodvrstaTransfera.HasValue ?
                new ObjectParameter("IDPodvrstaTransfera", iDPodvrstaTransfera) :
                new ObjectParameter("IDPodvrstaTransfera", typeof(int));
    
            var iDVrstaTransferaParameter = iDVrstaTransfera.HasValue ?
                new ObjectParameter("IDVrstaTransfera", iDVrstaTransfera) :
                new ObjectParameter("IDVrstaTransfera", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PodvrstaTransfera_Update", iDPodvrstaTransferaParameter, iDVrstaTransferaParameter, opisParameter);
        }
    
        public virtual ObjectResult<sp_Transfer_getByMonth_Result> sp_Transfer_getByMonth(Nullable<int> iDKorisnik, Nullable<bool> vrstaTransfera)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var vrstaTransferaParameter = vrstaTransfera.HasValue ?
                new ObjectParameter("VrstaTransfera", vrstaTransfera) :
                new ObjectParameter("VrstaTransfera", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Transfer_getByMonth_Result>("sp_Transfer_getByMonth", iDKorisnikParameter, vrstaTransferaParameter);
        }
    
        public virtual ObjectResult<sp_Transfer_getByType_Result> sp_Transfer_getByType(Nullable<int> iDKorisnik, Nullable<bool> vrstaTransfera)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var vrstaTransferaParameter = vrstaTransfera.HasValue ?
                new ObjectParameter("VrstaTransfera", vrstaTransfera) :
                new ObjectParameter("VrstaTransfera", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Transfer_getByType_Result>("sp_Transfer_getByType", iDKorisnikParameter, vrstaTransferaParameter);
        }
    
        public virtual int sp_Transfer_Insert(Nullable<int> iDKorisnik, Nullable<int> iDPodvrstaTransfera, Nullable<System.DateTime> datum, Nullable<double> iznos)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var iDPodvrstaTransferaParameter = iDPodvrstaTransfera.HasValue ?
                new ObjectParameter("IDPodvrstaTransfera", iDPodvrstaTransfera) :
                new ObjectParameter("IDPodvrstaTransfera", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosParameter = iznos.HasValue ?
                new ObjectParameter("Iznos", iznos) :
                new ObjectParameter("Iznos", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Transfer_Insert", iDKorisnikParameter, iDPodvrstaTransferaParameter, datumParameter, iznosParameter);
        }
    
        public virtual int sp_Transfer_Remove(Nullable<int> iDTransfer)
        {
            var iDTransferParameter = iDTransfer.HasValue ?
                new ObjectParameter("IDTransfer", iDTransfer) :
                new ObjectParameter("IDTransfer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Transfer_Remove", iDTransferParameter);
        }
    
        public virtual int sp_Transfer_RemoveYearMonth(Nullable<int> iDKorisnik, Nullable<int> godina, Nullable<int> mesec, Nullable<int> iDVrstaTransfera)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var godinaParameter = godina.HasValue ?
                new ObjectParameter("Godina", godina) :
                new ObjectParameter("Godina", typeof(int));
    
            var mesecParameter = mesec.HasValue ?
                new ObjectParameter("Mesec", mesec) :
                new ObjectParameter("Mesec", typeof(int));
    
            var iDVrstaTransferaParameter = iDVrstaTransfera.HasValue ?
                new ObjectParameter("IDVrstaTransfera", iDVrstaTransfera) :
                new ObjectParameter("IDVrstaTransfera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Transfer_RemoveYearMonth", iDKorisnikParameter, godinaParameter, mesecParameter, iDVrstaTransferaParameter);
        }
    
        public virtual ObjectResult<sp_Transfer_SaldoGodina_Result> sp_Transfer_SaldoGodina(Nullable<int> iDKorisnik)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Transfer_SaldoGodina_Result>("sp_Transfer_SaldoGodina", iDKorisnikParameter);
        }
    
        public virtual ObjectResult<sp_Transfer_SaldoMesec_Result> sp_Transfer_SaldoMesec(Nullable<int> iDKorisnik)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Transfer_SaldoMesec_Result>("sp_Transfer_SaldoMesec", iDKorisnikParameter);
        }
    
        public virtual ObjectResult<sp_Transfer_SelectBase_Result> sp_Transfer_SelectBase(Nullable<int> iDKorisnik, Nullable<int> mesec, Nullable<int> vrstaTransfera, Nullable<int> podvrstaTransfera, Nullable<bool> prihodRashod)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var mesecParameter = mesec.HasValue ?
                new ObjectParameter("Mesec", mesec) :
                new ObjectParameter("Mesec", typeof(int));
    
            var vrstaTransferaParameter = vrstaTransfera.HasValue ?
                new ObjectParameter("VrstaTransfera", vrstaTransfera) :
                new ObjectParameter("VrstaTransfera", typeof(int));
    
            var podvrstaTransferaParameter = podvrstaTransfera.HasValue ?
                new ObjectParameter("PodvrstaTransfera", podvrstaTransfera) :
                new ObjectParameter("PodvrstaTransfera", typeof(int));
    
            var prihodRashodParameter = prihodRashod.HasValue ?
                new ObjectParameter("PrihodRashod", prihodRashod) :
                new ObjectParameter("PrihodRashod", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Transfer_SelectBase_Result>("sp_Transfer_SelectBase", iDKorisnikParameter, mesecParameter, vrstaTransferaParameter, podvrstaTransferaParameter, prihodRashodParameter);
        }
    
        public virtual int sp_Transfer_Update(Nullable<int> iDTransfer, Nullable<int> iDKorisnik, Nullable<int> iDPodvrstaTransfera, Nullable<System.DateTime> datum, Nullable<double> iznos)
        {
            var iDTransferParameter = iDTransfer.HasValue ?
                new ObjectParameter("IDTransfer", iDTransfer) :
                new ObjectParameter("IDTransfer", typeof(int));
    
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            var iDPodvrstaTransferaParameter = iDPodvrstaTransfera.HasValue ?
                new ObjectParameter("IDPodvrstaTransfera", iDPodvrstaTransfera) :
                new ObjectParameter("IDPodvrstaTransfera", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosParameter = iznos.HasValue ?
                new ObjectParameter("Iznos", iznos) :
                new ObjectParameter("Iznos", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Transfer_Update", iDTransferParameter, iDKorisnikParameter, iDPodvrstaTransferaParameter, datumParameter, iznosParameter);
        }
    
        public virtual ObjectResult<sp_VrstaTransfera_get_Result> sp_VrstaTransfera_get(Nullable<bool> vrstaTransfera)
        {
            var vrstaTransferaParameter = vrstaTransfera.HasValue ?
                new ObjectParameter("VrstaTransfera", vrstaTransfera) :
                new ObjectParameter("VrstaTransfera", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VrstaTransfera_get_Result>("sp_VrstaTransfera_get", vrstaTransferaParameter);
        }
    
        public virtual ObjectResult<sp_VrstaTransfera_getByType_Result> sp_VrstaTransfera_getByType(Nullable<bool> vrstaTransfera)
        {
            var vrstaTransferaParameter = vrstaTransfera.HasValue ?
                new ObjectParameter("VrstaTransfera", vrstaTransfera) :
                new ObjectParameter("VrstaTransfera", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VrstaTransfera_getByType_Result>("sp_VrstaTransfera_getByType", vrstaTransferaParameter);
        }
    }
}
